%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.6.2 (Build 10C540) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 759 222
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 759 222
%%BeginPageSetup
cg_md begin
bp
sdmtx
%%EndPageSetup
0 0 0 0 setcmykcolor
T soprm
q
0 0 758.15997 221.69266 rc
302.01187 204.46805 m
449.25818 204.46805 l
f
Q
30.5 w
4 M
0 0 0 1 setcmykcolor
T setstrokeadjust
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
290.39603 197.20702 m
431.97903 197.20702 l
S
Q
0 0 0 0 setcmykcolor
q
0 0 758.15997 221.69266 rc
302.01187 140.68173 m
449.25818 140.68173 l
f
0 0 0 1 setcmykcolor
1.04 0 0 1.04 0 -0.62723768 cm
290.39603 135.87401 m
431.97903 135.87401 l
S
0 0 0 0 setcmykcolor
CM
302.01187 78.629082 m
449.25818 78.629082 l
f
0 0 0 1 setcmykcolor
1.04 0 0 1.04 0 -0.62723768 cm
290.39603 76.208 m
431.97903 76.208 l
S
0 0 0 0 setcmykcolor
CM
459.13818 81.835403 m
583.67816 81.835403 l
f
37 w
0 0 0 1 setcmykcolor
1.04 0 0 1.04 0 -0.62723768 cm
441.47903 79.291 m
561.229 79.291 l
S
0 0 0 0 setcmykcolor
CM
483.83817 220.15541 m
483.83817 62.855404 l
f
Q
47.5 w
0 0 0 1 setcmykcolor
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
465.22903 212.29102 m
465.22903 61.041004 l
S
Q
q
0 0 758.15997 221.69266 rc
585.90686 62.663002 m
645.13696 219.75291 l
699.21698 219.75291 l
757.85321 62.465405 l
706.94324 62.465405 l
699.21698 87.821648 l
643.35437 87.821648 l
635.43066 62.465405 l
585.90686 62.663002 l
f
Q
0.25 w
0 0 0 0 setcmykcolor
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
563.37201 60.856003 m
620.32404 211.90401 l
672.32404 211.90401 l
728.70502 60.666004 l
679.75311 60.666004 l
672.32404 85.047005 l
618.60999 85.047005 l
610.99103 60.666004 l
563.37201 60.856003 l
h
S
Q
q
0 0 758.15997 221.69266 rc
653.85321 122.68661 m
671.48431 179.34164 l
688.91675 122.68661 l
653.85321 122.68661 l
f
0.5 w
1.04 0 0 1.04 0 -0.62723768 cm
628.70502 118.57101 m
645.65802 173.04701 l
662.41998 118.57101 l
628.70502 118.57101 l
h
S
CM
164.21185 220.15541 m
164.21185 62.855404 l
f
Q
43.5 w
0 0 0 1 setcmykcolor
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
157.89601 212.29102 m
157.89601 61.041004 l
S
Q
0 0 0 0 setcmykcolor
q
0 0 758.15997 221.69266 rc
269.25186 220.15541 m
269.25186 62.855404 l
f
Q
0 0 0 1 setcmykcolor
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
258.89603 212.29102 m
258.89603 61.041004 l
S
Q
q
0 0 758.15997 221.69266 rc
186.39816 219.98277 m
246.52368 131.75853 l
246.52368 63.33276 l
186.39816 150.16757 l
186.39816 219.98277 l
f
0.25 w
1.04 0 0 1.04 0 -0.62723768 cm
179.229 212.12502 m
237.04201 127.29401 l
237.04201 61.5 l
179.229 144.99501 l
179.229 212.12502 l
h
S
CM
701.82629 45.002766 m
56.506321 45.002766 l
f
Q
9 w
1 J
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
674.83301 43.875004 m
54.333004 43.875004 l
S
4.25 w
0 J
1 j
107.604 4.375 m
107.604 26.281002 l
119.354 4.375 l
119.07301 26.375002 l
141.54201 24.281002 m
127.19801 24.281002 l
129.32301 4.2810001 m
129.32301 26.312002 l
142.04201 6.4370003 m
127.69801 6.4370003 l
138.41701 15.562 m
127.854 15.562 l
197.95801 24.364 m
183.61501 24.364 l
185.73999 4.3640003 m
185.73999 26.395 l
198.45801 6.52 m
184.11501 6.52 l
194.83301 15.645 m
184.27101 15.645 l
366.20801 23.947001 m
351.86502 23.947001 l
353.98999 3.9470003 m
353.98999 25.978001 l
366.70801 6.1030002 m
352.36502 6.1030002 l
363.08301 15.228001 m
352.52103 15.228001 l
446.39603 24.281002 m
432.05301 24.281002 l
434.17801 4.2810001 m
434.17801 26.312002 l
446.89603 6.4370003 m
432.55301 6.4370003 l
443.27103 15.562 m
432.70901 15.562 l
624.41803 24.364 m
610.07404 24.364 l
612.19904 4.3640003 m
612.19904 26.395 l
624.91803 6.52 m
610.57404 6.52 l
621.29303 15.645 m
610.72998 15.645 l
285.89603 4.2910004 m
285.89603 26.197001 l
297.64603 4.2910004 l
297.36401 26.291 l
570.68805 4.4580002 m
570.68805 26.364 l
582.43805 4.4580002 l
582.15601 26.458002 l
205.938 4.3330002 m
205.938 26.239 l
217.68799 4.3330002 l
217.40701 26.333002 l
406.02103 24.167002 m
389.979 24.167002 l
398.34503 4.303 m
398.34503 26.334002 l
539.573 4.3650002 m
539.573 26.396002 l
501.89603 4.2920003 m
501.89603 26.323002 l
514.06305 6.4160004 m
503.49997 6.4160004 l
520.177 4.2610002 m
520.177 26.292002 l
532.34412 6.3850002 m
521.78101 6.3850002 l
335.31302 4.1260004 m
335.31302 26.157001 l
347.479 6.25 m
336.91702 6.25 l
247.18703 4.3760004 m
247.18703 26.407001 l
259.354 6.5 m
248.79201 6.5 l
S
CM
274.10553 3.0990825 m
280.77817 27.321722 l
f
0 j
1.04 0 0 1.04 0 -0.62723768 cm
263.56302 3.5830002 m
269.979 26.874001 l
S
Q
q
0 0 758.15997 221.69266 rc
289.01187 3.3154023 m
282.29553 27.321722 l
f
Q
4.25 w
0 J
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
277.89603 3.7910001 m
271.43802 26.874001 l
S
Q
1 j
q
0 0 758.15997 221.69266 rc
1.04 0 0 1.04 0 -0.62723768 cm
265.06302 10.541 m
275.854 10.541 l
S
CM
386.42554 3.0990825 m
393.09814 27.321722 l
f
Q
0 j
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
371.56302 3.5830002 m
377.979 26.874001 l
S
Q
q
0 0 758.15997 221.69266 rc
401.33185 3.3154023 m
394.61554 27.321722 l
f
Q
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
385.89603 3.7910001 m
379.43802 26.874001 l
S
Q
1 j
q
0 0 758.15997 221.69266 rc
1.04 0 0 1.04 0 -0.62723768 cm
373.06302 10.541 m
383.854 10.541 l
S
CM
499.43817 3.0990825 m
506.11185 27.321722 l
f
Q
0 j
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
480.22903 3.5830002 m
486.64603 26.874001 l
S
Q
q
0 0 758.15997 221.69266 rc
514.34552 3.3154023 m
507.62817 27.321722 l
f
Q
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
494.56302 3.7910001 m
488.10403 26.874001 l
S
Q
1 j
q
0 0 758.15997 221.69266 rc
1.04 0 0 1.04 0 -0.62723768 cm
481.72903 10.541 m
492.52103 10.541 l
S
CM
570.85291 3.0990825 m
577.52557 27.321722 l
f
Q
0 j
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
548.89703 3.5830002 m
555.31305 26.874001 l
S
Q
q
0 0 758.15997 221.69266 rc
585.75812 3.3154023 m
579.04291 27.321722 l
f
Q
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
563.229 3.7910001 m
556.77203 26.874001 l
S
1 j
550.39703 10.541 m
561.18805 10.541 l
412.65601 4.322 m
412.65601 26.353001 l
423.32303 4.2390003 m
423.32303 26.269999 l
412.16702 15.937001 m
423.35403 15.937001 l
453.85501 4.3740001 m
453.85501 26.374001 l
S
3.8 w
453.52103 24.458002 m
461.60501 24.458002 l
460.72903 15.291 m
460.72903 15.291 468.89603 21.165001 460.85403 24.624001 c
454.72998 15.083001 m
461.60501 15.083001 l
465.22998 3.4160001 m
459.18802 15.083001 l
S
Q
2 w
1 j
q
0 0 758.15997 221.69266 rc
1.04 0 0 1.04 0 -0.62723768 cm
534.31305 25.624001 m
544.81305 25.624001 l
534.229 5.2070003 m
544.729 5.2070003 l
S
Q
4.25 w
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
227.35501 21.999001 m
227.35501 8.7910004 l
236.98 22.113001 m
236.98 22.113001 230.80101 28.955002 227.14601 21.042002 c
236.93802 9.1450005 m
236.93802 9.1450005 231.68301 1.2290001 227.10501 9.7490005 c
S
4 w
236.68802 11.875001 m
236.68802 7.8750005 l
236.64702 23.499001 m
236.64702 19.499001 l
S
4.25 w
592.479 21.916 m
592.479 8.7080002 l
602.104 22.029999 m
602.104 22.029999 595.92603 28.872002 592.27106 20.959002 c
602.06305 9.0620003 m
602.06305 9.0620003 596.80804 1.146 592.229 9.6660004 c
S
4 w
601.81305 11.792001 m
601.81305 7.7920003 l
601.77106 23.416 m
601.77106 19.416 l
232.313 13.832001 m
239.479 13.832001 l
S
3 w
238.02101 14.708001 m
238.02101 3.7920003 l
S
4.25 w
147.229 26.917002 m
152.979 3.7080002 l
158.313 26.793001 m
152.729 3.6670001 l
158.438 27.042002 m
164.188 3.8330002 l
169.52101 26.918001 m
163.938 3.7920003 l
307.26102 25.906002 m
307.26102 4.8120003 l
S
3.5 w
306.198 24.156002 m
314.79202 24.156002 l
307.19803 6.5620003 m
315.79202 6.5620003 l
S
3.75 w
313.979 24.25 m
313.979 24.25 317.04202 22.75 317.07303 20.312 c
317.104 17.875 317.07303 10.875001 317.07303 10.875001 c
317.07303 10.875001 317.01102 6.7810001 313.44803 6.3750005 c
S
Q
0 0 0 0 setcmykcolor
q
0 0 758.15997 221.69266 rc
325.88815 4.3772426 m
325.88815 4.3772426 328.84595 4.6372423 328.91144 5.092762 c
328.97595 5.5472422 329.04144 3.4350023 329.04144 3.4350023 c
325.9537 3.3372424 l
325.88815 4.3772426 l
f
Q
q
0.062399991 0 757.97803 221.43045 rc
1.04 0 0 1.04 0 -0.62723768 cm
82.896004 2.125 m
656.229 2.125 l
67.729996 28.792002 m
641.06305 28.792002 l
S
0 0 0 1 setcmykcolor
CM
131.79816 62.985405 m
131.79816 187.00542 l
131.79816 187.00542 126.33816 219.24541 91.238159 221.32541 c
56.138161 223.40541 33.77816 194.28542 33.518158 169.32539 c
33.25816 144.3654 39.498158 129.2854 39.498158 129.2854 c
39.498158 129.2854 11.67816 129.2854 3.09816 110.56541 c
-5.4818401 91.845406 6.4781599 78.845398 6.4781599 78.845398 c
6.4781599 78.845398 9.85816 64.545403 43.658157 63.505405 c
77.45816 62.465405 131.79816 62.985405 131.79816 62.985405 c
f
Q
q
0 0 758.15997 221.69266 rc
98.090714 134.57381 m
109.29984 113.91836 120.09816 74.322441 120.09816 74.322441 c
120.09816 74.322441 79.204323 70.842598 55.95512 74.267319 c
35.856079 77.22612 18.89888 112.9782 59.791683 116.45805 c
48.9944 156.05397 88.397919 152.42644 98.090714 134.57381 c
f
0.25 w
0 j
0 0 0 1 setcmykcolor
1.04 0 0 1.04 0 -0.62723768 cm
94.317993 130.00101 m
105.09601 110.14 115.479 72.067001 115.479 72.067001 c
115.479 72.067001 76.158005 68.721001 53.803001 72.014 c
34.477001 74.859001 18.172001 109.23601 57.492004 112.58201 c
47.110001 150.65501 84.998001 147.16701 94.317993 130.00101 c
h
S
CM
0.10816 97.825409 m
0.10816 97.825409 0.10816 74.879883 18.893681 68.119881 c
f
247.49815 63.462765 m
244.89815 67.622757 l
244.37816 132.62276 l
248.53816 129.50276 l
f
ep
end
%%Trailer
%%EOF
